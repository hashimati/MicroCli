package ${entitypackage}

import com.fasterxml.jackson.annotation.JsonProperty
${importedPackages};
import jakarta.validation.constraints.*;
import groovy.transform.Canonical;
import groovy.transform.CompileStatic;
${jpa?'import javax.persistence.*':''};
${jdbc || jpa || mongo?'import io.micronaut.data.annotation.*;' :''}
<% if(openApi) out.print "import io.swagger.v3.oas.annotations.media.Schema" %>
${jdbc?'import static io.micronaut.data.model.naming.NamingStrategies.*' :''}
import java.time.Instant
${containDate?'import java.time.Instant':''}
${containBigInteger?'import java.math.BigInteger':''}
${containBigDecimal?'import java.math.BigDecimal':''}
import java.util.*

${security? 'import io.micronaut.security.annotation.CreatedBy':''}
${security? 'import io.micronaut.security.annotation.UpdatedBy' :''}

<% if(openApi) out.print "@Schema(name=\"${className}\", description=\"${className} Description\")" %>
<% if(jpa) out.print "@Entity(name=\"${collectionName}\")"%>
<% if(jdbc || mongo) out.print "@MappedEntity(value = \"${collectionName}\", namingStrategy = Raw.class)"%>
@CompileStatic
@Canonical
class ${className}{
    <% if(jpa) out.print '@Id'%>
    <% if(jpa) out.print '@GeneratedValue(strategy = GenerationType.SEQUENCE)' %>
    <% if(jpa) out.print 'long id'%>
    <% if(jdbc || mongo) out.print '@Id'%>
    <% if(jdbc || mongo) out.print '@GeneratedValue(GeneratedValue.Type.AUTO)' %>
    <% if(jdbc) out.print 'long id'%>
    <% if(normal) out.print 'String id;'%>
    ${instances}
    <% if(jdbc || jpa || mongo) out.print '@DateCreated' %>
    <% if(jdbc || jpa || mongo) out.print 'Instant dateCreated;' %>

    <% if(jdbc || jpa || mongo) out.print '@DateUpdated' %>
    <% if(jdbc || jpa || mongo) out.print 'Instant dateUpdated;' %>
    <% if(security) out.print '@CreatedBy private String createdBy' %>
    <% if(security) out.print '@UpdatedBy private String updatedBy' %>
}