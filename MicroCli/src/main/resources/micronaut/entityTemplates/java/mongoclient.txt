package ${clientPackage};


import io.micronaut.context.annotation.Parameter;
import io.micronaut.http.annotation.*;
import io.micronaut.http.client.annotation.Client;
import jakarta.inject.Inject;
<% print reactor? "import reactor.core.publisher.Flux;" : "import io.reactivex.Flowable;" %>
<% print reactor? "import reactor.core.publisher.Mono;" : "import io.reactivex.Single;" %>
import ${entityPackage};


@Client("/api/${entities}")
public interface ${classNameA}Client {

    @Post("/save")
    public <% print reactor? "Mono" : "Single" %><${className}> save(${classNameA} ${entityName});

    @Get("/get")
    public <% print reactor? "Mono" : "Single" %><${className}> findById(@Parameter("id") String id);

    @Delete("/delete/{id}")
    public boolean deleteById(@PathVariable("id") String id);

    @Get("/findAll")
    public <% print reactor? "Flux" : "Flowable" %><${className}> findAll();

    @Put("/update")
    public <% print reactor? "Mono" : "Single" %><${className}> update(@Body ${className} ${entityName});
}

