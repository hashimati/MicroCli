    <% if(jaeger) out.print '@NewSpan("'+className+'-service")'%>
    <% if(micrometer) out.print '@Timed(value = "'+controllerPackage+'.'+entityName+'Controller.findAllBy'+Attribute+'", percentiles = { 0.5, 0.95, 0.99 }, description = "Observing all service metric for finding a '+entityName+' object by '+Attribute+'")' %>
    @Get("/findAllBy${Attribute}")
    @Operation(summary = "Getting all entity by ${Attribute}",
       description = "A REST service, which retrieves a ${className} objects by ${Attribute}."
    )
    @ApiResponse(
       content = @Content(mediaType = "application/json")
    )
    @ApiResponse(responseCode = "400", description = "Invalid Id Supplied")
    @ApiResponse(responseCode = "404", description = "${className} not found")
    fun findAllBy${Attribute}(query : ${attributeType}<% if(principle) out.print ', principle:Principal '%> <% if(header) out.print ',  @Header("Authorization")authorization:String '%>):${returnTypeList} {
          log.info("Finding all ${className} By ${Attribute}: {}", query)
          return ${entityName}Service.findAllBy${Attribute}(query)
    }


