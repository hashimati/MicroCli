package ${clientPackage}



import io.micronaut.context.annotation.Parameter
import io.micronaut.http.annotation.*
import io.micronaut.http.client.annotation.Client;
import jakarta.inject.Inject
<% print reactor? "import reactor.core.publisher.Flux;" : "import io.reactivex.Flowable;" %>
<% print reactor? "import reactor.core.publisher.Mono;" : "import io.reactivex.Single;" %>

import ${entityPackage}


@Client("/api/${entities}")
interface ${classNameA}Client {

    @Post("/save")
    <% print reactor? "Mono" : "Single" %><${className}> save(@Body ${classNameA} ${entityName})

    @Get("/get")
    <% print reactor? "Mono" : "Single" %><${className}> findById(@Parameter("id") long id)

    @Delete("/delete/{id}")
    <% print reactor? "Mono" : "Single" %><Boolean> deleteById(@PathVariable("id") long id)

    @Get("/findAll")
    <% print reactor? "Flux" : "Flowable" %><${className}> findAll()


    @Put("/update")
    <% print reactor? "Mono" : "Single" %><${className}> update(@Body ${className} ${entityName})

}

