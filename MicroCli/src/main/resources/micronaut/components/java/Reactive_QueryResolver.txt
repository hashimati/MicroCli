package ${pack};

import graphql.kickstart.tools.GraphQLMutationResolver;
import graphql.kickstart.tools.GraphQLQueryResolver;
import ${domainPackage}.${className};
import ${servicePackage}.${className}Service;

import jakarta.inject.Inject;
import jakarta.inject.Singleton;

@Singleton
public class ${className}QueryResolver implements GraphQLQueryResolver, GraphQLMutationResolver {
    @Inject
    private ${className}Service ${entityName}Service;
    public ${className} find${className}ById(String id)
    {
        return ${entityName}Service.findById(id).blockingGet();
    }

    public Iterable<${className}> findAll${className}()
    {
        return ${entityName}Service.findAll().blockingIterable();
    }

    public ${className} save${className}(${className} ${entityName}){
        return ${entityName}Service.save(${entityName}).blockingGet();
    }
    public ${className} update${className}(${className} ${entityName})
    {
        return  ${entityName}Service.update(${entityName}).blockingGet();

    }
    public boolean delete${className}(String id){
      return ${entityName}Service.deleteById(id).blockingGet();
    }

}