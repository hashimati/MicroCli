14:50:51.463 [ForkJoinPool.commonPool-worker-5] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
14:50:51.474 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
14:50:52.103 [ForkJoinPool.commonPool-worker-5] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
14:50:53.985 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
14:50:53.991 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
14:50:55.200 [main] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
14:50:55.212 [main] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
14:50:55.213 [main] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
14:50:55.214 [main] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
14:50:55.214 [ForkJoinPool.commonPool-worker-5] ERROR i.m.context.DefaultBeanContext - Error processing bean method Definition: io.micronaut.management.health.monitor.HealthMonitorTask.void monitor() with processor (io.micronaut.scheduling.processor.ScheduledMethodProcessor@117b1966): Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Message: Missing runtime type for required type handler for type: io.ahmed.hashim.microstream.FruitData
Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Message: Missing runtime type for required type handler for type: io.ahmed.hashim.microstream.FruitData
Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.scheduling.processor.ScheduledMethodProcessor.process(ScheduledMethodProcessor.java:106)
	at io.micronaut.context.DefaultBeanContext.lambda$null$34(DefaultBeanContext.java:1963)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
Caused by: one.microstream.persistence.exceptions.PersistenceException: Missing runtime type for required type handler for type: io.ahmed.hashim.microstream.FruitData
	at one.microstream.persistence.types.PersistenceTypeHandlerManager$Default.validateExistingType(PersistenceTypeHandlerManager.java:396)
	at one.microstream.persistence.types.PersistenceTypeHandlerManager$Default.ensureTypeHandler(PersistenceTypeHandlerManager.java:446)
	at one.microstream.persistence.types.PersistenceTypeHandlerManager$Default.lambda$2(PersistenceTypeHandlerManager.java:493)
	at one.microstream.collections.ChainStorageStrong.iterate(ChainStorageStrong.java:1335)
	at one.microstream.collections.HashEnum.iterate(HashEnum.java:701)
	at one.microstream.persistence.types.PersistenceTypeHandlerManager$Default.ensureTypeHandlers(PersistenceTypeHandlerManager.java:492)
	at one.microstream.persistence.types.PersistenceTypeHandlerManager$Default.ensureTypeHandlersByTypeIds(PersistenceTypeHandlerManager.java:484)
	at one.microstream.storage.embedded.types.EmbeddedStorageManager$Default.ensureRequiredTypeHandlers(EmbeddedStorageManager.java:340)
	at one.microstream.storage.embedded.types.EmbeddedStorageManager$Default.start(EmbeddedStorageManager.java:250)
	at one.microstream.storage.embedded.types.EmbeddedStorageManager$Default.start(EmbeddedStorageManager.java:1)
	at io.micronaut.microstream.conf.StorageManagerFactory.createStorageManager(StorageManagerFactory.java:63)
	at io.micronaut.microstream.conf.$StorageManagerFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 87 common frames omitted
14:50:55.219 [MicroStream-StorageChannel-0] ERROR o.m.storage.types.StorageChannelTask - Error occured in storage channel#0
one.microstream.afs.exceptions.AfsExceptionExclusiveAttemptSharedUserConflict: File "D:/hello/mm/channel_0/transactions_0.sft" cannot be accessed exclusively since there are shared users present.
	at one.microstream.afs.types.AccessManager$Default$2.handleExclusiveAttemptSharedUsersConflict(AccessManager.java:746)
	at one.microstream.afs.types.AccessManager$Default.internalUseWriting(AccessManager.java:656)
	at one.microstream.afs.types.AccessManager$Default.useWriting(AccessManager.java:482)
	at one.microstream.afs.types.AFile.useWriting(AFile.java:108)
	at one.microstream.afs.types.AFS.applyWriting(AFS.java:272)
	at one.microstream.afs.types.AFS.applyWriting(AFS.java:262)
	at one.microstream.afs.types.AFile.ensureExists(AFile.java:157)
	at one.microstream.storage.types.StorageFileManager$Default.createTransactionsFile(StorageFileManager.java:1119)
	at one.microstream.storage.types.StorageFileManager$Default.readTransactionsFile(StorageFileManager.java:729)
	at one.microstream.storage.types.StorageFileManager$Default.readStorage(StorageFileManager.java:714)
	at one.microstream.storage.types.StorageChannel$Default.readStorage(StorageChannel.java:758)
	at one.microstream.storage.types.StorageChannelTaskInitialize$Default.internalProcessBy(StorageChannelTaskInitialize.java:195)
	at one.microstream.storage.types.StorageChannelTaskInitialize$Default.internalProcessBy(StorageChannelTaskInitialize.java:1)
	at one.microstream.storage.types.StorageChannelTask$Abstract.processBy(StorageChannelTask.java:252)
	at one.microstream.storage.types.StorageChannel$Default.work(StorageChannel.java:428)
	at one.microstream.storage.types.StorageChannel$Default.run(StorageChannel.java:520)
	at java.base/java.lang.Thread.run(Thread.java:834)
14:50:55.222 [MicroStream-StorageChannel-2] ERROR o.m.storage.types.StorageChannelTask - Error occured in storage channel#2
one.microstream.afs.exceptions.AfsExceptionExclusiveAttemptSharedUserConflict: File "D:/hello/mm/channel_2/transactions_2.sft" cannot be accessed exclusively since there are shared users present.
	at one.microstream.afs.types.AccessManager$Default$2.handleExclusiveAttemptSharedUsersConflict(AccessManager.java:746)
	at one.microstream.afs.types.AccessManager$Default.internalUseWriting(AccessManager.java:656)
	at one.microstream.afs.types.AccessManager$Default.useWriting(AccessManager.java:482)
	at one.microstream.afs.types.AFile.useWriting(AFile.java:108)
	at one.microstream.afs.types.AFS.applyWriting(AFS.java:272)
	at one.microstream.afs.types.AFS.applyWriting(AFS.java:262)
	at one.microstream.afs.types.AFile.ensureExists(AFile.java:157)
	at one.microstream.storage.types.StorageFileManager$Default.createTransactionsFile(StorageFileManager.java:1119)
	at one.microstream.storage.types.StorageFileManager$Default.readTransactionsFile(StorageFileManager.java:729)
	at one.microstream.storage.types.StorageFileManager$Default.readStorage(StorageFileManager.java:714)
	at one.microstream.storage.types.StorageChannel$Default.readStorage(StorageChannel.java:758)
	at one.microstream.storage.types.StorageChannelTaskInitialize$Default.internalProcessBy(StorageChannelTaskInitialize.java:195)
	at one.microstream.storage.types.StorageChannelTaskInitialize$Default.internalProcessBy(StorageChannelTaskInitialize.java:1)
	at one.microstream.storage.types.StorageChannelTask$Abstract.processBy(StorageChannelTask.java:252)
	at one.microstream.storage.types.StorageChannel$Default.work(StorageChannel.java:428)
	at one.microstream.storage.types.StorageChannel$Default.run(StorageChannel.java:520)
	at java.base/java.lang.Thread.run(Thread.java:834)
14:50:55.221 [MicroStream-StorageChannel-1] ERROR o.m.storage.types.StorageChannelTask - Error occured in storage channel#1
one.microstream.afs.exceptions.AfsExceptionExclusiveAttemptSharedUserConflict: File "D:/hello/mm/channel_1/transactions_1.sft" cannot be accessed exclusively since there are shared users present.
	at one.microstream.afs.types.AccessManager$Default$2.handleExclusiveAttemptSharedUsersConflict(AccessManager.java:746)
	at one.microstream.afs.types.AccessManager$Default.internalUseWriting(AccessManager.java:656)
	at one.microstream.afs.types.AccessManager$Default.useWriting(AccessManager.java:482)
	at one.microstream.afs.types.AFile.useWriting(AFile.java:108)
	at one.microstream.afs.types.AFS.applyWriting(AFS.java:272)
	at one.microstream.afs.types.AFS.applyWriting(AFS.java:262)
	at one.microstream.afs.types.AFile.ensureExists(AFile.java:157)
	at one.microstream.storage.types.StorageFileManager$Default.createTransactionsFile(StorageFileManager.java:1119)
	at one.microstream.storage.types.StorageFileManager$Default.readTransactionsFile(StorageFileManager.java:729)
	at one.microstream.storage.types.StorageFileManager$Default.readStorage(StorageFileManager.java:714)
	at one.microstream.storage.types.StorageChannel$Default.readStorage(StorageChannel.java:758)
	at one.microstream.storage.types.StorageChannelTaskInitialize$Default.internalProcessBy(StorageChannelTaskInitialize.java:195)
	at one.microstream.storage.types.StorageChannelTaskInitialize$Default.internalProcessBy(StorageChannelTaskInitialize.java:1)
	at one.microstream.storage.types.StorageChannelTask$Abstract.processBy(StorageChannelTask.java:252)
	at one.microstream.storage.types.StorageChannel$Default.work(StorageChannel.java:428)
	at one.microstream.storage.types.StorageChannel$Default.run(StorageChannel.java:520)
	at java.base/java.lang.Thread.run(Thread.java:834)
14:50:55.220 [MicroStream-StorageChannel-3] ERROR o.m.storage.types.StorageChannelTask - Error occured in storage channel#3
one.microstream.afs.exceptions.AfsExceptionExclusiveAttemptSharedUserConflict: File "D:/hello/mm/channel_3/transactions_3.sft" cannot be accessed exclusively since there are shared users present.
	at one.microstream.afs.types.AccessManager$Default$2.handleExclusiveAttemptSharedUsersConflict(AccessManager.java:746)
	at one.microstream.afs.types.AccessManager$Default.internalUseWriting(AccessManager.java:656)
	at one.microstream.afs.types.AccessManager$Default.useWriting(AccessManager.java:482)
	at one.microstream.afs.types.AFile.useWriting(AFile.java:108)
	at one.microstream.afs.types.AFS.applyWriting(AFS.java:272)
	at one.microstream.afs.types.AFS.applyWriting(AFS.java:262)
	at one.microstream.afs.types.AFile.ensureExists(AFile.java:157)
	at one.microstream.storage.types.StorageFileManager$Default.createTransactionsFile(StorageFileManager.java:1119)
	at one.microstream.storage.types.StorageFileManager$Default.readTransactionsFile(StorageFileManager.java:729)
	at one.microstream.storage.types.StorageFileManager$Default.readStorage(StorageFileManager.java:714)
	at one.microstream.storage.types.StorageChannel$Default.readStorage(StorageChannel.java:758)
	at one.microstream.storage.types.StorageChannelTaskInitialize$Default.internalProcessBy(StorageChannelTaskInitialize.java:195)
	at one.microstream.storage.types.StorageChannelTaskInitialize$Default.internalProcessBy(StorageChannelTaskInitialize.java:1)
	at one.microstream.storage.types.StorageChannelTask$Abstract.processBy(StorageChannelTask.java:252)
	at one.microstream.storage.types.StorageChannel$Default.work(StorageChannel.java:428)
	at one.microstream.storage.types.StorageChannel$Default.run(StorageChannel.java:520)
	at java.base/java.lang.Thread.run(Thread.java:834)
14:50:55.246 [main] ERROR io.micronaut.runtime.Micronaut - Error starting Micronaut server: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Message: Problem in channel #0
Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Message: Problem in channel #0
Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:86)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:41)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.$RouteExecutor$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1578)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.context.BeanLocator.findBean(BeanLocator.java:291)
	at io.micronaut.runtime.Micronaut.start(Micronaut.java:74)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:320)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:306)
	at io.hashimati.Application.main(Application.java:16)
Caused by: one.microstream.storage.exceptions.StorageException: Problem in channel #0
	at one.microstream.storage.types.StorageChannelTask$Abstract.checkForProblems(StorageChannelTask.java:114)
	at one.microstream.storage.types.StorageChannelTask$Abstract.waitOnCompletion(StorageChannelTask.java:173)
	at one.microstream.storage.types.StorageSystem$Default.startThreads(StorageSystem.java:324)
	at one.microstream.storage.types.StorageSystem$Default.internalStartUp(StorageSystem.java:502)
	at one.microstream.storage.types.StorageSystem$Default.start(StorageSystem.java:587)
	at one.microstream.storage.types.StorageSystem$Default.start(StorageSystem.java:1)
	at one.microstream.storage.embedded.types.EmbeddedStorageManager$Default.start(EmbeddedStorageManager.java:246)
	at one.microstream.storage.embedded.types.EmbeddedStorageManager$Default.start(EmbeddedStorageManager.java:1)
	at io.micronaut.microstream.conf.StorageManagerFactory.createStorageManager(StorageManagerFactory.java:63)
	at io.micronaut.microstream.conf.$StorageManagerFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 134 common frames omitted
Caused by: one.microstream.afs.exceptions.AfsExceptionExclusiveAttemptSharedUserConflict: File "D:/hello/mm/channel_0/transactions_0.sft" cannot be accessed exclusively since there are shared users present.
	at one.microstream.afs.types.AccessManager$Default$2.handleExclusiveAttemptSharedUsersConflict(AccessManager.java:746)
	at one.microstream.afs.types.AccessManager$Default.internalUseWriting(AccessManager.java:656)
	at one.microstream.afs.types.AccessManager$Default.useWriting(AccessManager.java:482)
	at one.microstream.afs.types.AFile.useWriting(AFile.java:108)
	at one.microstream.afs.types.AFS.applyWriting(AFS.java:272)
	at one.microstream.afs.types.AFS.applyWriting(AFS.java:262)
	at one.microstream.afs.types.AFile.ensureExists(AFile.java:157)
	at one.microstream.storage.types.StorageFileManager$Default.createTransactionsFile(StorageFileManager.java:1119)
	at one.microstream.storage.types.StorageFileManager$Default.readTransactionsFile(StorageFileManager.java:729)
	at one.microstream.storage.types.StorageFileManager$Default.readStorage(StorageFileManager.java:714)
	at one.microstream.storage.types.StorageChannel$Default.readStorage(StorageChannel.java:758)
	at one.microstream.storage.types.StorageChannelTaskInitialize$Default.internalProcessBy(StorageChannelTaskInitialize.java:195)
	at one.microstream.storage.types.StorageChannelTaskInitialize$Default.internalProcessBy(StorageChannelTaskInitialize.java:1)
	at one.microstream.storage.types.StorageChannelTask$Abstract.processBy(StorageChannelTask.java:252)
	at one.microstream.storage.types.StorageChannel$Default.work(StorageChannel.java:428)
	at one.microstream.storage.types.StorageChannel$Default.run(StorageChannel.java:520)
	at java.base/java.lang.Thread.run(Thread.java:834)
14:53:11.051 [ForkJoinPool.commonPool-worker-15] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
14:53:11.059 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
14:53:11.557 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
14:53:11.725 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
14:53:11.743 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
14:53:11.828 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
14:53:12.313 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
14:53:12.317 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
14:53:12.334 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
14:53:12.342 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
14:53:12.356 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
14:53:12.356 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
14:53:12.388 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
14:53:12.460 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
14:53:12.634 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
14:53:14.219 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 10257ms. Server Running: http://localhost:8080
14:55:44.965 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
14:56:16.688 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
14:58:36.676 [ForkJoinPool.commonPool-worker-15] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
14:58:36.683 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
14:58:37.274 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
14:58:37.609 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
14:58:37.622 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
14:58:38.305 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
14:58:38.361 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
14:58:39.841 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 14856ms. Server Running: http://localhost:8080
14:59:00.241 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@754a48c6
14:59:00.241 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@754a48c6
15:01:02.676 [ForkJoinPool.commonPool-worker-3] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
15:01:02.682 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:01:03.239 [ForkJoinPool.commonPool-worker-3] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:01:03.558 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:01:03.563 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:01:03.650 [ForkJoinPool.commonPool-worker-3] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:01:03.695 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:01:03.699 [ForkJoinPool.commonPool-worker-3] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:01:03.723 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:01:03.729 [ForkJoinPool.commonPool-worker-3] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:01:03.767 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:01:03.767 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:01:03.779 [ForkJoinPool.commonPool-worker-3] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:01:03.786 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:01:05.109 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 6717ms. Server Running: http://localhost:8080
15:01:14.911 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
15:03:05.532 [ForkJoinPool.commonPool-worker-5] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
15:03:05.541 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:03:06.022 [ForkJoinPool.commonPool-worker-5] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:03:06.289 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:03:06.295 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:03:06.393 [ForkJoinPool.commonPool-worker-5] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:03:06.430 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:03:06.435 [ForkJoinPool.commonPool-worker-5] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:03:06.457 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:03:06.464 [ForkJoinPool.commonPool-worker-5] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:03:06.491 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:03:06.491 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:03:06.500 [ForkJoinPool.commonPool-worker-5] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:03:06.508 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:03:08.286 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 11889ms. Server Running: http://localhost:8080
15:03:22.809 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
15:04:29.928 [ForkJoinPool.commonPool-worker-13] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
15:04:29.940 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:04:30.461 [ForkJoinPool.commonPool-worker-13] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:04:30.632 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:04:30.641 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:04:30.755 [ForkJoinPool.commonPool-worker-13] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:04:30.899 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:04:30.905 [ForkJoinPool.commonPool-worker-13] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:04:30.920 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:04:30.928 [ForkJoinPool.commonPool-worker-13] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:04:31.058 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:04:31.059 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:04:31.077 [ForkJoinPool.commonPool-worker-13] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:04:31.090 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:04:32.534 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 13181ms. Server Running: http://localhost:8080
15:04:42.127 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
15:06:04.993 [ForkJoinPool.commonPool-worker-11] ERROR i.m.context.DefaultBeanContext - Error processing bean method Definition: io.micronaut.management.health.monitor.HealthMonitorTask.void monitor() with processor (io.micronaut.scheduling.processor.ScheduledMethodProcessor@3f36659b): Error instantiating bean of type  [one.microstream.storage.embedded.types.EmbeddedStorageFoundation]

Message: Could not resolve placeholder ${storageDirectory}
Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name) --> StorageManager.createStorageManager([EmbeddedStorageFoundation foundation],String name) --> EmbeddedStorageFoundation.createFoundation([EmbeddedStorageConfigurationProvider provider])
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.embedded.types.EmbeddedStorageFoundation]

Message: Could not resolve placeholder ${storageDirectory}
Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name) --> StorageManager.createStorageManager([EmbeddedStorageFoundation foundation],String name) --> EmbeddedStorageFoundation.createFoundation([EmbeddedStorageConfigurationProvider provider])
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.microstream.conf.$EmbeddedStorageFoundationFactory$CreateFoundation0$Definition.build(Unknown Source)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:161)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.microstream.conf.$StorageManagerFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.scheduling.processor.ScheduledMethodProcessor.process(ScheduledMethodProcessor.java:106)
	at io.micronaut.context.DefaultBeanContext.lambda$null$34(DefaultBeanContext.java:1963)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
Caused by: io.micronaut.context.exceptions.ConfigurationException: Could not resolve placeholder ${storageDirectory}
	at io.micronaut.context.env.DefaultPropertyPlaceholderResolver$PlaceholderSegment.getValue(DefaultPropertyPlaceholderResolver.java:297)
	at io.micronaut.context.env.DefaultPropertyPlaceholderResolver.resolveRequiredPlaceholders(DefaultPropertyPlaceholderResolver.java:106)
	at io.micronaut.context.env.PropertySourcePropertyResolver.resolvePlaceHoldersIfNecessary(PropertySourcePropertyResolver.java:816)
	at io.micronaut.context.env.PropertySourcePropertyResolver.getProperty(PropertySourcePropertyResolver.java:320)
	at io.micronaut.context.DefaultApplicationContext.getProperty(DefaultApplicationContext.java:211)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getValueForPath(AbstractInitializableBeanDefinition.java:1703)
	at io.micronaut.microstream.conf.$DefaultEmbeddedStorageConfigurationProvider$Definition.injectBean(Unknown Source)
	at io.micronaut.microstream.conf.$DefaultEmbeddedStorageConfigurationProvider$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 116 common frames omitted
15:06:04.993 [main] ERROR io.micronaut.runtime.Micronaut - Error starting Micronaut server: Error instantiating bean of type  [one.microstream.storage.embedded.types.EmbeddedStorageFoundation]

Message: Could not resolve placeholder ${storageDirectory}
Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name) --> StorageManager.createStorageManager([EmbeddedStorageFoundation foundation],String name) --> EmbeddedStorageFoundation.createFoundation([EmbeddedStorageConfigurationProvider provider])
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.embedded.types.EmbeddedStorageFoundation]

Message: Could not resolve placeholder ${storageDirectory}
Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name) --> StorageManager.createStorageManager([EmbeddedStorageFoundation foundation],String name) --> EmbeddedStorageFoundation.createFoundation([EmbeddedStorageConfigurationProvider provider])
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.microstream.conf.$EmbeddedStorageFoundationFactory$CreateFoundation0$Definition.build(Unknown Source)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:161)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.microstream.conf.$StorageManagerFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:86)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:41)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.$RouteExecutor$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1578)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.context.BeanLocator.findBean(BeanLocator.java:291)
	at io.micronaut.runtime.Micronaut.start(Micronaut.java:74)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:320)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:306)
	at io.hashimati.Application.main(Application.java:16)
Caused by: io.micronaut.context.exceptions.ConfigurationException: Could not resolve placeholder ${storageDirectory}
	at io.micronaut.context.env.DefaultPropertyPlaceholderResolver$PlaceholderSegment.getValue(DefaultPropertyPlaceholderResolver.java:297)
	at io.micronaut.context.env.DefaultPropertyPlaceholderResolver.resolveRequiredPlaceholders(DefaultPropertyPlaceholderResolver.java:106)
	at io.micronaut.context.env.PropertySourcePropertyResolver.resolvePlaceHoldersIfNecessary(PropertySourcePropertyResolver.java:816)
	at io.micronaut.context.env.PropertySourcePropertyResolver.getProperty(PropertySourcePropertyResolver.java:320)
	at io.micronaut.context.DefaultApplicationContext.getProperty(DefaultApplicationContext.java:211)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getValueForPath(AbstractInitializableBeanDefinition.java:1703)
	at io.micronaut.microstream.conf.$DefaultEmbeddedStorageConfigurationProvider$Definition.injectBean(Unknown Source)
	at io.micronaut.microstream.conf.$DefaultEmbeddedStorageConfigurationProvider$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 163 common frames omitted
15:06:49.173 [ForkJoinPool.commonPool-worker-13] ERROR i.m.context.DefaultBeanContext - Error processing bean method Definition: io.micronaut.management.health.monitor.HealthMonitorTask.void monitor() with processor (io.micronaut.scheduling.processor.ScheduledMethodProcessor@779367ad): Error instantiating bean of type  [one.microstream.storage.embedded.types.EmbeddedStorageFoundation]

Message: Could not resolve placeholder ${storageDirectory}
Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name) --> StorageManager.createStorageManager([EmbeddedStorageFoundation foundation],String name) --> EmbeddedStorageFoundation.createFoundation([EmbeddedStorageConfigurationProvider provider])
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.embedded.types.EmbeddedStorageFoundation]

Message: Could not resolve placeholder ${storageDirectory}
Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name) --> StorageManager.createStorageManager([EmbeddedStorageFoundation foundation],String name) --> EmbeddedStorageFoundation.createFoundation([EmbeddedStorageConfigurationProvider provider])
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.microstream.conf.$EmbeddedStorageFoundationFactory$CreateFoundation0$Definition.build(Unknown Source)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:161)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.microstream.conf.$StorageManagerFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.scheduling.processor.ScheduledMethodProcessor.process(ScheduledMethodProcessor.java:106)
	at io.micronaut.context.DefaultBeanContext.lambda$null$34(DefaultBeanContext.java:1963)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
Caused by: io.micronaut.context.exceptions.ConfigurationException: Could not resolve placeholder ${storageDirectory}
	at io.micronaut.context.env.DefaultPropertyPlaceholderResolver$PlaceholderSegment.getValue(DefaultPropertyPlaceholderResolver.java:297)
	at io.micronaut.context.env.DefaultPropertyPlaceholderResolver.resolveRequiredPlaceholders(DefaultPropertyPlaceholderResolver.java:106)
	at io.micronaut.context.env.PropertySourcePropertyResolver.resolvePlaceHoldersIfNecessary(PropertySourcePropertyResolver.java:816)
	at io.micronaut.context.env.PropertySourcePropertyResolver.getProperty(PropertySourcePropertyResolver.java:320)
	at io.micronaut.context.DefaultApplicationContext.getProperty(DefaultApplicationContext.java:211)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getValueForPath(AbstractInitializableBeanDefinition.java:1703)
	at io.micronaut.microstream.conf.$DefaultEmbeddedStorageConfigurationProvider$Definition.injectBean(Unknown Source)
	at io.micronaut.microstream.conf.$DefaultEmbeddedStorageConfigurationProvider$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 116 common frames omitted
15:06:49.173 [main] ERROR io.micronaut.runtime.Micronaut - Error starting Micronaut server: Error instantiating bean of type  [one.microstream.storage.embedded.types.EmbeddedStorageFoundation]

Message: Could not resolve placeholder ${storageDirectory}
Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name) --> StorageManager.createStorageManager([EmbeddedStorageFoundation foundation],String name) --> EmbeddedStorageFoundation.createFoundation([EmbeddedStorageConfigurationProvider provider])
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.embedded.types.EmbeddedStorageFoundation]

Message: Could not resolve placeholder ${storageDirectory}
Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name) --> StorageManager.createStorageManager([EmbeddedStorageFoundation foundation],String name) --> EmbeddedStorageFoundation.createFoundation([EmbeddedStorageConfigurationProvider provider])
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.microstream.conf.$EmbeddedStorageFoundationFactory$CreateFoundation0$Definition.build(Unknown Source)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:161)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.microstream.conf.$StorageManagerFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:86)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:41)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.$RouteExecutor$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1578)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.context.BeanLocator.findBean(BeanLocator.java:291)
	at io.micronaut.runtime.Micronaut.start(Micronaut.java:74)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:320)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:306)
	at io.hashimati.Application.main(Application.java:16)
Caused by: io.micronaut.context.exceptions.ConfigurationException: Could not resolve placeholder ${storageDirectory}
	at io.micronaut.context.env.DefaultPropertyPlaceholderResolver$PlaceholderSegment.getValue(DefaultPropertyPlaceholderResolver.java:297)
	at io.micronaut.context.env.DefaultPropertyPlaceholderResolver.resolveRequiredPlaceholders(DefaultPropertyPlaceholderResolver.java:106)
	at io.micronaut.context.env.PropertySourcePropertyResolver.resolvePlaceHoldersIfNecessary(PropertySourcePropertyResolver.java:816)
	at io.micronaut.context.env.PropertySourcePropertyResolver.getProperty(PropertySourcePropertyResolver.java:320)
	at io.micronaut.context.DefaultApplicationContext.getProperty(DefaultApplicationContext.java:211)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getValueForPath(AbstractInitializableBeanDefinition.java:1703)
	at io.micronaut.microstream.conf.$DefaultEmbeddedStorageConfigurationProvider$Definition.injectBean(Unknown Source)
	at io.micronaut.microstream.conf.$DefaultEmbeddedStorageConfigurationProvider$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 163 common frames omitted
15:08:19.720 [ForkJoinPool.commonPool-worker-3] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
15:08:19.730 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:08:20.331 [ForkJoinPool.commonPool-worker-3] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:08:20.735 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:08:20.742 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:08:20.856 [ForkJoinPool.commonPool-worker-3] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:08:20.894 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:08:20.898 [ForkJoinPool.commonPool-worker-3] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:08:20.968 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:08:20.974 [ForkJoinPool.commonPool-worker-3] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:08:21.006 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:08:21.007 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:08:21.138 [ForkJoinPool.commonPool-worker-3] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:08:21.150 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:08:22.638 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 13319ms. Server Running: http://localhost:8080
15:08:35.422 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
15:11:05.704 [ForkJoinPool.commonPool-worker-13] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
15:11:05.717 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:11:06.363 [ForkJoinPool.commonPool-worker-13] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:11:06.661 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:11:06.668 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:11:06.759 [ForkJoinPool.commonPool-worker-13] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:11:06.800 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:11:06.804 [ForkJoinPool.commonPool-worker-13] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:11:06.830 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:11:06.835 [ForkJoinPool.commonPool-worker-13] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:11:06.860 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:11:06.861 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:11:06.870 [ForkJoinPool.commonPool-worker-13] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:11:06.878 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:11:09.355 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 14480ms. Server Running: http://localhost:8080
15:11:19.551 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
15:12:01.879 [ForkJoinPool.commonPool-worker-11] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
15:12:01.885 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:12:02.306 [ForkJoinPool.commonPool-worker-11] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:12:02.518 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:12:02.523 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:12:02.622 [ForkJoinPool.commonPool-worker-11] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:12:02.668 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:12:02.672 [ForkJoinPool.commonPool-worker-11] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:12:02.697 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:12:02.703 [ForkJoinPool.commonPool-worker-11] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:12:02.737 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:12:02.738 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:12:02.746 [ForkJoinPool.commonPool-worker-11] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:12:02.752 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:12:04.071 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 5899ms. Server Running: http://localhost:8080
15:12:12.017 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
15:12:17.679 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
15:12:19.013 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
15:12:20.084 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
15:13:55.832 [ForkJoinPool.commonPool-worker-15] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
15:13:55.841 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:13:56.323 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:13:56.597 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:13:56.604 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:13:56.701 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:13:56.739 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:13:56.743 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:13:56.768 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:13:56.775 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:13:56.820 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:13:56.821 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:13:56.840 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:13:56.846 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:13:58.227 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 13266ms. Server Running: http://localhost:8080
15:14:06.037 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
15:15:51.459 [ForkJoinPool.commonPool-worker-5] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
15:15:51.468 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:15:52.050 [ForkJoinPool.commonPool-worker-5] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:15:52.297 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:15:52.305 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:15:52.393 [ForkJoinPool.commonPool-worker-5] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:15:52.433 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:15:52.528 [ForkJoinPool.commonPool-worker-5] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:15:52.565 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:15:52.571 [ForkJoinPool.commonPool-worker-5] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:15:52.607 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:15:52.608 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:15:52.620 [ForkJoinPool.commonPool-worker-5] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:15:52.627 [ForkJoinPool.commonPool-worker-5] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:15:53.913 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 13222ms. Server Running: http://localhost:8080
15:16:18.062 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
15:21:45.791 [ForkJoinPool.commonPool-worker-11] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
15:21:45.799 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:21:46.283 [ForkJoinPool.commonPool-worker-11] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:21:46.618 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:21:46.623 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:21:46.717 [ForkJoinPool.commonPool-worker-11] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:21:46.773 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:21:46.782 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
15:21:46.788 [ForkJoinPool.commonPool-worker-11] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:21:46.824 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
15:21:46.825 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
15:21:46.833 [ForkJoinPool.commonPool-worker-11] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
15:21:46.837 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
15:21:48.472 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 13647ms. Server Running: http://localhost:8080
15:22:22.950 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
15:22:44.688 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
18:34:10.915 [ForkJoinPool.commonPool-worker-13] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
18:34:10.915 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
18:34:11.166 [ForkJoinPool.commonPool-worker-13] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
18:34:11.404 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
18:34:11.404 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
18:34:12.084 [ForkJoinPool.commonPool-worker-13] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
18:34:12.108 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
18:34:12.767 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 11302ms. Server Running: http://localhost:8080
18:34:44.641 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
18:35:51.907 [ForkJoinPool.commonPool-worker-9] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
18:35:51.907 [ForkJoinPool.commonPool-worker-9] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
18:35:52.158 [ForkJoinPool.commonPool-worker-9] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
18:35:52.299 [ForkJoinPool.commonPool-worker-9] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
18:35:52.299 [ForkJoinPool.commonPool-worker-9] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
18:35:52.346 [ForkJoinPool.commonPool-worker-9] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
18:35:52.362 [ForkJoinPool.commonPool-worker-9] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
18:35:52.974 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 8527ms. Server Running: http://localhost:8080
18:35:59.842 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
18:35:59.842 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:10:18.683 [main] ERROR io.micronaut.runtime.Micronaut - Error starting Micronaut server: while scanning a simple key
 in 'reader', line 70, column 7:
          th
          ^
could not find expected ':'
 in 'reader', line 71, column 3:
      cache:
      ^

org.yaml.snakeyaml.scanner.ScannerException: while scanning a simple key
 in 'reader', line 70, column 7:
          th
          ^
could not find expected ':'
 in 'reader', line 71, column 3:
      cache:
      ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.stalePossibleSimpleKeys(ScannerImpl.java:505)
	at org.yaml.snakeyaml.scanner.ScannerImpl.needMoreTokens(ScannerImpl.java:320)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:250)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:628)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:166)
	at org.yaml.snakeyaml.comments.CommentEventsCollector$1.peek(CommentEventsCollector.java:59)
	at org.yaml.snakeyaml.comments.CommentEventsCollector$1.peek(CommentEventsCollector.java:45)
	at org.yaml.snakeyaml.comments.CommentEventsCollector.collectEvents(CommentEventsCollector.java:140)
	at org.yaml.snakeyaml.comments.CommentEventsCollector.collectEvents(CommentEventsCollector.java:119)
	at org.yaml.snakeyaml.composer.Composer.composeScalarNode(Composer.java:214)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:184)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:314)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:305)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:286)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:188)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:314)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:305)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:286)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:188)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:314)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:305)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:286)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:188)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:314)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:305)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:286)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:188)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:115)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:135)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:514)
	at io.micronaut.context.env.yaml.YamlPropertySourceLoader.processInput(YamlPropertySourceLoader.java:61)
	at io.micronaut.context.env.AbstractPropertySourceLoader.read(AbstractPropertySourceLoader.java:117)
	at io.micronaut.context.env.AbstractPropertySourceLoader.loadProperties(AbstractPropertySourceLoader.java:102)
	at io.micronaut.context.env.AbstractPropertySourceLoader.load(AbstractPropertySourceLoader.java:68)
	at io.micronaut.context.env.AbstractPropertySourceLoader.load(AbstractPropertySourceLoader.java:55)
	at io.micronaut.context.env.DefaultEnvironment.loadPropertySourceFromLoader(DefaultEnvironment.java:601)
	at io.micronaut.context.env.DefaultEnvironment.readPropertySourceList(DefaultEnvironment.java:534)
	at io.micronaut.context.env.DefaultEnvironment.readPropertySourceList(DefaultEnvironment.java:520)
	at io.micronaut.context.DefaultApplicationContext$RuntimeConfiguredEnvironment.readPropertySourceList(DefaultApplicationContext.java:790)
	at io.micronaut.context.env.DefaultEnvironment.readPropertySources(DefaultEnvironment.java:408)
	at io.micronaut.context.env.DefaultEnvironment.start(DefaultEnvironment.java:270)
	at io.micronaut.context.DefaultApplicationContext$RuntimeConfiguredEnvironment.start(DefaultApplicationContext.java:765)
	at io.micronaut.context.DefaultApplicationContext$RuntimeConfiguredEnvironment.start(DefaultApplicationContext.java:734)
	at io.micronaut.context.DefaultApplicationContext.startEnvironment(DefaultApplicationContext.java:238)
	at io.micronaut.context.DefaultApplicationContext.start(DefaultApplicationContext.java:189)
	at io.micronaut.runtime.Micronaut.start(Micronaut.java:72)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:320)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:306)
	at io.hashimati.Application.main(Application.java:16)
19:11:01.445 [ForkJoinPool.commonPool-worker-7] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
19:11:01.453 [ForkJoinPool.commonPool-worker-7] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
19:11:01.796 [ForkJoinPool.commonPool-worker-7] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
19:11:01.912 [ForkJoinPool.commonPool-worker-7] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
19:11:01.916 [ForkJoinPool.commonPool-worker-7] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
19:11:01.988 [ForkJoinPool.commonPool-worker-7] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
19:11:02.085 [ForkJoinPool.commonPool-worker-7] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
19:11:02.185 [ForkJoinPool.commonPool-worker-7] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
19:11:02.983 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 4977ms. Server Running: http://localhost:8080
19:11:29.847 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Error instantiating bean of type  [io.micronaut.microstream.cache.MicroStreamSyncCache]

Message: Multiple possible bean candidates found: [one.microstream.storage.types.StorageManager, one.microstream.storage.types.StorageManager]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> new $FruitService$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,[List $interceptors]) --> new CacheInterceptor([CacheManager cacheManager],CacheErrorHandler errorHandler,AsyncCacheErrorHandler asyncCacheErrorHandler,ExecutorService ioExecutor,BeanContext beanContext) --> new DefaultCacheManager([List caches],BeanProvider dynamicCacheManager) --> MicroStreamSyncCache.createCache(String name,[Builder cacheConfigurationBuilder],ExecutorService executorService)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [io.micronaut.microstream.cache.MicroStreamSyncCache]

Message: Multiple possible bean candidates found: [one.microstream.storage.types.StorageManager, one.microstream.storage.types.StorageManager]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> new $FruitService$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,[List $interceptors]) --> new CacheInterceptor([CacheManager cacheManager],CacheErrorHandler errorHandler,AsyncCacheErrorHandler asyncCacheErrorHandler,ExecutorService ioExecutor,BeanContext beanContext) --> new DefaultCacheManager([List caches],BeanProvider dynamicCacheManager) --> MicroStreamSyncCache.createCache(String name,[Builder cacheConfigurationBuilder],ExecutorService executorService)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.microstream.cache.$CacheFactory$CreateCache0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.cache.$DefaultCacheManager$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.cache.interceptor.$CacheInterceptor$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeanRegistrations(AbstractBeanResolutionContext.java:96)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeanRegistrations(AbstractInitializableBeanDefinition.java:2194)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanRegistrationsForConstructorArgument(AbstractInitializableBeanDefinition.java:1464)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [one.microstream.storage.types.StorageManager, one.microstream.storage.types.StorageManager]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:499)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3106)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.microstream.cache.CacheConfigurationFactory.lambda$findStorageManager$1(CacheConfigurationFactory.java:93)
	at java.base/java.util.Optional.flatMap(Optional.java:294)
	at io.micronaut.microstream.cache.CacheConfigurationFactory.findStorageManager(CacheConfigurationFactory.java:89)
	at io.micronaut.microstream.cache.CacheConfigurationFactory.createCacheConfigurationProvider(CacheConfigurationFactory.java:71)
	at io.micronaut.microstream.cache.$CacheConfigurationFactory$CreateCacheConfigurationProvider0$Definition.build(Unknown Source)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:161)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 153 common frames omitted
19:12:47.339 [ForkJoinPool.commonPool-worker-15] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
19:12:47.360 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
19:12:47.787 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
19:12:48.272 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
19:12:48.280 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
19:12:48.384 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
19:12:48.416 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
19:12:49.451 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 6830ms. Server Running: http://localhost:8080
19:12:58.051 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
19:15:33.435 [ForkJoinPool.commonPool-worker-15] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
19:15:33.439 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
19:15:33.843 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
19:15:34.163 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
19:15:34.175 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
19:15:34.267 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
19:15:34.347 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
19:15:35.614 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 11083ms. Server Running: http://localhost:8080
19:16:43.859 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
19:18:04.739 [ForkJoinPool.commonPool-worker-3] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
19:18:04.747 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
19:18:05.007 [ForkJoinPool.commonPool-worker-3] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
19:18:05.143 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
19:18:05.147 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
19:18:05.195 [ForkJoinPool.commonPool-worker-3] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
19:18:05.231 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
19:18:05.875 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 9021ms. Server Running: http://localhost:8080
19:18:51.901 [default-nioEventLoopGroup-1-2] ERROR i.m.http.server.RouteExecutor - Unexpected error occurred: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
io.micronaut.context.exceptions.DependencyInjectionException: Failed to inject value for field [rootProvider] of class: io.hashimati.repositories.$FruitRepository$Definition$Intercepted

Message: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
Path Taken: new $FruitController$Definition$Intercepted(BeanResolutionContext $beanResolutionContext,BeanContext $beanContext,Qualifier $qualifier,List $interceptors) --> $FruitController$Definition$Intercepted.fruitService --> $FruitService$Definition$Intercepted.fruitRepository --> $FruitRepository$Definition$Intercepted.rootProvider
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2091)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.repositories.$FruitRepository$Definition.injectBean(Unknown Source)
	at io.hashimati.repositories.$FruitRepository$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.services.$FruitService$Definition.injectBean(Unknown Source)
	at io.hashimati.services.$FruitService$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForField(AbstractInitializableBeanDefinition.java:1606)
	at io.hashimati.controllers.$FruitController$Definition.injectBean(Unknown Source)
	at io.hashimati.controllers.$FruitController$Definition$Intercepted$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.context.DefaultBeanContext$4.getTarget(DefaultBeanContext.java:557)
	at io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:592)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)
	at io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)
	at reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8469)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
	at io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:953)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)
	at io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)
	at io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)
	at io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:946)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:995)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.NonUniqueBeanException: Multiple possible bean candidates found: [io.micronaut.microstream.DefaultRootProvider, io.micronaut.microstream.DefaultRootProvider]
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:2451)
	at io.micronaut.context.DefaultApplicationContext.findConcreteCandidate(DefaultApplicationContext.java:484)
	at io.micronaut.context.DefaultBeanContext.lastChanceResolve(DefaultBeanContext.java:3228)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidateNoCache(DefaultBeanContext.java:3119)
	at io.micronaut.context.DefaultBeanContext.findConcreteCandidate(DefaultBeanContext.java:3037)
	at io.micronaut.context.DefaultBeanContext.findBeanDefinition(DefaultBeanContext.java:786)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2769)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	... 112 common frames omitted
19:20:03.881 [ForkJoinPool.commonPool-worker-15] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
19:20:03.881 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
19:20:04.164 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
19:20:04.383 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
19:20:04.399 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
19:20:04.478 [ForkJoinPool.commonPool-worker-15] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
19:20:04.509 [ForkJoinPool.commonPool-worker-15] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
19:20:05.121 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 3674ms. Server Running: http://localhost:8080
19:20:07.727 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:20:07.727 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:28:53.436 [ForkJoinPool.commonPool-worker-9] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
19:28:53.436 [ForkJoinPool.commonPool-worker-9] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
19:28:53.688 [ForkJoinPool.commonPool-worker-9] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
19:28:53.923 [ForkJoinPool.commonPool-worker-9] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
19:28:53.923 [ForkJoinPool.commonPool-worker-9] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
19:28:53.986 [ForkJoinPool.commonPool-worker-9] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
19:28:54.015 [ForkJoinPool.commonPool-worker-9] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
19:28:54.616 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 9116ms. Server Running: http://localhost:8080
19:29:21.936 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:21.936 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:24.681 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:24.682 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:25.622 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:25.622 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:26.356 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:26.356 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:26.753 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:26.753 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:27.132 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:27.132 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:30.178 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:30.179 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:31.117 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:31.117 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:31.331 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:31.331 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:31.510 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:31.510 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:31.729 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:31.729 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:31.902 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:31.902 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:32.091 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:32.091 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:32.263 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:32.263 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:32.483 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
19:29:32.483 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:07.407 [default-nioEventLoopGroup-1-3] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:07.407 [default-nioEventLoopGroup-1-3] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:07.517 [default-nioEventLoopGroup-1-3] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:07.517 [default-nioEventLoopGroup-1-3] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:07.721 [default-nioEventLoopGroup-1-3] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:07.721 [default-nioEventLoopGroup-1-3] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:07.925 [default-nioEventLoopGroup-1-3] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:07.925 [default-nioEventLoopGroup-1-3] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:08.145 [default-nioEventLoopGroup-1-3] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:08.145 [default-nioEventLoopGroup-1-3] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:08.490 [default-nioEventLoopGroup-1-3] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:08.490 [default-nioEventLoopGroup-1-3] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:08.694 [default-nioEventLoopGroup-1-3] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:08.694 [default-nioEventLoopGroup-1-3] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:12.287 [default-nioEventLoopGroup-1-3] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:12.288 [default-nioEventLoopGroup-1-3] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:12.661 [default-nioEventLoopGroup-1-3] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:12.662 [default-nioEventLoopGroup-1-3] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:12.854 [default-nioEventLoopGroup-1-3] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:12.854 [default-nioEventLoopGroup-1-3] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:13.041 [default-nioEventLoopGroup-1-3] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:13.041 [default-nioEventLoopGroup-1-3] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:13.270 [default-nioEventLoopGroup-1-3] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:13.270 [default-nioEventLoopGroup-1-3] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:18.470 [default-nioEventLoopGroup-1-3] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:05:18.470 [default-nioEventLoopGroup-1-3] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:51:50.354 [ForkJoinPool.commonPool-worker-3] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
20:51:50.429 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
20:51:51.293 [ForkJoinPool.commonPool-worker-3] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
20:51:51.581 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
20:51:51.591 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
20:51:51.794 [ForkJoinPool.commonPool-worker-3] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
20:51:52.236 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
20:51:52.349 [ForkJoinPool.commonPool-worker-3] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
20:51:53.703 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 14456ms. Server Running: http://localhost:8080
20:51:58.045 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:51:58.045 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:52:02.985 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:52:02.989 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:55:30.699 [ForkJoinPool.commonPool-worker-11] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
20:55:30.740 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
20:55:31.602 [ForkJoinPool.commonPool-worker-11] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
20:55:31.830 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
20:55:31.838 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
20:55:32.038 [ForkJoinPool.commonPool-worker-11] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
20:55:32.473 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
20:55:32.581 [ForkJoinPool.commonPool-worker-11] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
20:55:33.986 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 14002ms. Server Running: http://localhost:8080
20:55:43.492 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:55:43.492 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:55:47.638 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:55:47.641 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:55:48.698 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:55:48.698 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:55:49.817 [default-nioEventLoopGroup-1-2] INFO  i.h.controllers.FruitController - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
20:55:49.817 [default-nioEventLoopGroup-1-2] INFO  io.hashimati.services.FruitService - Saving  Fruit : io.hashimati.domains.Fruit@c5aa1650
21:06:34.471 [default-nioEventLoopGroup-1-4] INFO  i.h.controllers.FruitController - find All
21:06:34.471 [default-nioEventLoopGroup-1-4] INFO  io.hashimati.services.FruitService - Find All
21:07:35.220 [ForkJoinPool.commonPool-worker-7] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
21:07:35.252 [ForkJoinPool.commonPool-worker-7] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:07:35.424 [main] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:07:35.428 [ForkJoinPool.commonPool-worker-7] ERROR i.m.context.DefaultBeanContext - Error processing bean method Definition: io.micronaut.management.health.monitor.HealthMonitorTask.void monitor() with processor (io.micronaut.scheduling.processor.ScheduledMethodProcessor@429a269b): Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.scheduling.processor.ScheduledMethodProcessor.process(ScheduledMethodProcessor.java:106)
	at io.micronaut.context.DefaultBeanContext.lambda$null$34(DefaultBeanContext.java:1963)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 87 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=87) Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 106 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 110 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 111 common frames omitted
21:07:35.456 [main] ERROR io.micronaut.runtime.Micronaut - Error starting Micronaut server: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:86)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:41)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.$RouteExecutor$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1578)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.context.BeanLocator.findBean(BeanLocator.java:291)
	at io.micronaut.runtime.Micronaut.start(Micronaut.java:74)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:320)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:306)
	at io.hashimati.Application.main(Application.java:16)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 134 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=89) Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 153 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 157 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 158 common frames omitted
21:08:28.843 [ForkJoinPool.commonPool-worker-3] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
21:08:28.864 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:08:29.030 [main] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:08:29.030 [ForkJoinPool.commonPool-worker-3] ERROR i.m.context.DefaultBeanContext - Error processing bean method Definition: io.micronaut.management.health.monitor.HealthMonitorTask.void monitor() with processor (io.micronaut.scheduling.processor.ScheduledMethodProcessor@18a063b7): Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.scheduling.processor.ScheduledMethodProcessor.process(ScheduledMethodProcessor.java:106)
	at io.micronaut.context.DefaultBeanContext.lambda$null$34(DefaultBeanContext.java:1963)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 87 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=91) Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 106 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 110 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 111 common frames omitted
21:08:29.051 [main] ERROR io.micronaut.runtime.Micronaut - Error starting Micronaut server: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:86)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:41)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.$RouteExecutor$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1578)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.context.BeanLocator.findBean(BeanLocator.java:291)
	at io.micronaut.runtime.Micronaut.start(Micronaut.java:74)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:320)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:306)
	at io.hashimati.Application.main(Application.java:16)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 134 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=93) Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 153 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 157 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 158 common frames omitted
21:09:37.358 [ForkJoinPool.commonPool-worker-9] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
21:09:37.382 [ForkJoinPool.commonPool-worker-9] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:09:37.513 [main] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:09:37.513 [ForkJoinPool.commonPool-worker-9] ERROR i.m.context.DefaultBeanContext - Error processing bean method Definition: io.micronaut.management.health.monitor.HealthMonitorTask.void monitor() with processor (io.micronaut.scheduling.processor.ScheduledMethodProcessor@6271414b): Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.scheduling.processor.ScheduledMethodProcessor.process(ScheduledMethodProcessor.java:106)
	at io.micronaut.context.DefaultBeanContext.lambda$null$34(DefaultBeanContext.java:1963)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 87 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=95) Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 106 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 110 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 111 common frames omitted
21:09:37.537 [main] ERROR io.micronaut.runtime.Micronaut - Error starting Micronaut server: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:86)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:41)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.$RouteExecutor$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1578)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.context.BeanLocator.findBean(BeanLocator.java:291)
	at io.micronaut.runtime.Micronaut.start(Micronaut.java:74)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:320)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:306)
	at io.hashimati.Application.main(Application.java:16)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 134 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=97) Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 153 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 157 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 158 common frames omitted
21:10:09.161 [ForkJoinPool.commonPool-worker-13] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
21:10:09.193 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:10:09.343 [main] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:10:09.353 [ForkJoinPool.commonPool-worker-13] ERROR i.m.context.DefaultBeanContext - Error processing bean method Definition: io.micronaut.management.health.monitor.HealthMonitorTask.void monitor() with processor (io.micronaut.scheduling.processor.ScheduledMethodProcessor@46acba9f): Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.scheduling.processor.ScheduledMethodProcessor.process(ScheduledMethodProcessor.java:106)
	at io.micronaut.context.DefaultBeanContext.lambda$null$34(DefaultBeanContext.java:1963)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 87 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=99) Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 106 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 110 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 111 common frames omitted
21:10:09.380 [main] ERROR io.micronaut.runtime.Micronaut - Error starting Micronaut server: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:86)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:41)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.$RouteExecutor$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1578)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.context.BeanLocator.findBean(BeanLocator.java:291)
	at io.micronaut.runtime.Micronaut.start(Micronaut.java:74)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:320)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:306)
	at io.hashimati.Application.main(Application.java:16)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 134 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=101) Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 153 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 157 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 158 common frames omitted
21:12:01.074 [ForkJoinPool.commonPool-worker-9] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
21:12:01.095 [ForkJoinPool.commonPool-worker-9] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:12:01.911 [ForkJoinPool.commonPool-worker-9] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
21:12:02.136 [ForkJoinPool.commonPool-worker-9] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Starting embedded storage manager
21:12:02.142 [ForkJoinPool.commonPool-worker-9] INFO  o.m.s.types.StorageSystem$Default - Starting storage system
21:12:02.466 [ForkJoinPool.commonPool-worker-9] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
21:12:02.946 [ForkJoinPool.commonPool-worker-9] INFO  o.m.s.e.t.EmbeddedStorageManager$Default - Embedded storage manager initialized
21:12:03.106 [ForkJoinPool.commonPool-worker-9] INFO  o.m.p.t.PersistenceTypeHandlerManager$Default - Initializing type handler manager
21:12:04.418 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 13123ms. Server Running: http://localhost:8080
21:15:03.890 [ForkJoinPool.commonPool-worker-11] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
21:15:03.927 [ForkJoinPool.commonPool-worker-11] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:15:04.119 [main] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:15:04.124 [ForkJoinPool.commonPool-worker-11] ERROR i.m.context.DefaultBeanContext - Error processing bean method Definition: io.micronaut.management.health.monitor.HealthMonitorTask.void monitor() with processor (io.micronaut.scheduling.processor.ScheduledMethodProcessor@2517dc5e): Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.scheduling.processor.ScheduledMethodProcessor.process(ScheduledMethodProcessor.java:106)
	at io.micronaut.context.DefaultBeanContext.lambda$null$34(DefaultBeanContext.java:1963)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 87 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=143) Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 106 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 110 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 111 common frames omitted
21:15:04.143 [main] ERROR io.micronaut.runtime.Micronaut - Error starting Micronaut server: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:86)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:41)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.$RouteExecutor$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1578)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.context.BeanLocator.findBean(BeanLocator.java:291)
	at io.micronaut.runtime.Micronaut.start(Micronaut.java:74)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:320)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:306)
	at io.hashimati.Application.main(Application.java:16)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 134 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=145) Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 153 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 157 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 158 common frames omitted
21:16:25.161 [ForkJoinPool.commonPool-worker-9] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
21:16:25.183 [ForkJoinPool.commonPool-worker-9] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:16:25.382 [main] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:16:25.387 [ForkJoinPool.commonPool-worker-9] ERROR i.m.context.DefaultBeanContext - Error processing bean method Definition: io.micronaut.management.health.monitor.HealthMonitorTask.void monitor() with processor (io.micronaut.scheduling.processor.ScheduledMethodProcessor@57359d06): Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.scheduling.processor.ScheduledMethodProcessor.process(ScheduledMethodProcessor.java:106)
	at io.micronaut.context.DefaultBeanContext.lambda$null$34(DefaultBeanContext.java:1963)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 87 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=147) Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 106 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 110 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 111 common frames omitted
21:16:25.406 [main] ERROR io.micronaut.runtime.Micronaut - Error starting Micronaut server: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:86)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:41)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.$RouteExecutor$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1578)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.context.BeanLocator.findBean(BeanLocator.java:291)
	at io.micronaut.runtime.Micronaut.start(Micronaut.java:74)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:320)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:306)
	at io.hashimati.Application.main(Application.java:16)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 134 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=149) Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 153 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 157 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 158 common frames omitted
21:20:17.795 [ForkJoinPool.commonPool-worker-3] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
21:20:17.826 [ForkJoinPool.commonPool-worker-3] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:20:17.951 [main] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:20:17.959 [ForkJoinPool.commonPool-worker-3] ERROR i.m.context.DefaultBeanContext - Error processing bean method Definition: io.micronaut.management.health.monitor.HealthMonitorTask.void monitor() with processor (io.micronaut.scheduling.processor.ScheduledMethodProcessor@13344b4d): Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.scheduling.processor.ScheduledMethodProcessor.process(ScheduledMethodProcessor.java:106)
	at io.micronaut.context.DefaultBeanContext.lambda$null$34(DefaultBeanContext.java:1963)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 87 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=151) Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 106 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 110 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 111 common frames omitted
21:20:17.974 [main] ERROR io.micronaut.runtime.Micronaut - Error starting Micronaut server: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:86)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:41)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.$RouteExecutor$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1578)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.context.BeanLocator.findBean(BeanLocator.java:291)
	at io.micronaut.runtime.Micronaut.start(Micronaut.java:74)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:320)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:306)
	at io.hashimati.Application.main(Application.java:16)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 134 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=153) Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 153 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 157 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 158 common frames omitted
21:21:09.284 [ForkJoinPool.commonPool-worker-13] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
21:21:09.300 [ForkJoinPool.commonPool-worker-13] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:21:09.410 [main] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:21:09.426 [ForkJoinPool.commonPool-worker-13] ERROR i.m.context.DefaultBeanContext - Error processing bean method Definition: io.micronaut.management.health.monitor.HealthMonitorTask.void monitor() with processor (io.micronaut.scheduling.processor.ScheduledMethodProcessor@7cf2d35e): Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.scheduling.processor.ScheduledMethodProcessor.process(ScheduledMethodProcessor.java:106)
	at io.micronaut.context.DefaultBeanContext.lambda$null$34(DefaultBeanContext.java:1963)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 87 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=155) Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 106 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 110 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 111 common frames omitted
21:21:09.441 [main] ERROR io.micronaut.runtime.Micronaut - Error starting Micronaut server: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:86)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:41)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.$RouteExecutor$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1578)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.context.BeanLocator.findBean(BeanLocator.java:291)
	at io.micronaut.runtime.Micronaut.start(Micronaut.java:74)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:320)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:306)
	at io.hashimati.Application.main(Application.java:16)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 134 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=157) Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 153 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 157 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 158 common frames omitted
21:22:07.149 [ForkJoinPool.commonPool-worker-9] INFO  one.microstream.util.logging.Logging - MicroStream Version 07.00.00-MS-GA
21:22:07.169 [ForkJoinPool.commonPool-worker-9] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:22:07.297 [main] INFO  o.m.s.e.t.EmbeddedStorageFoundation$Default - Creating embedded storage manager
21:22:07.301 [ForkJoinPool.commonPool-worker-9] ERROR i.m.context.DefaultBeanContext - Error processing bean method Definition: io.micronaut.management.health.monitor.HealthMonitorTask.void monitor() with processor (io.micronaut.scheduling.processor.ScheduledMethodProcessor@35fd626b): Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.scheduling.processor.ScheduledMethodProcessor.process(ScheduledMethodProcessor.java:106)
	at io.micronaut.context.DefaultBeanContext.lambda$null$34(DefaultBeanContext.java:1963)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 87 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=159) Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 106 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 110 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 111 common frames omitted
21:22:07.313 [main] ERROR io.micronaut.runtime.Micronaut - Error starting Micronaut server: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [one.microstream.storage.types.StorageManager]

Path Taken: StorageManager.createStorageManager(EmbeddedStorageFoundation foundation,String name)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2346)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1562)
	at io.micronaut.microstream.metrics.MicroStreamMetricsBinder.<init>(MicroStreamMetricsBinder.java:69)
	at io.micronaut.microstream.metrics.$MicroStreamMetricsBinder$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2832)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:3490)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistrations(DefaultBeanContext.java:3436)
	at io.micronaut.context.DefaultBeanContext.getBeanRegistrations(DefaultBeanContext.java:3406)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:1373)
	at io.micronaut.context.AbstractBeanResolutionContext.getBeansOfType(AbstractBeanResolutionContext.java:72)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBeansOfType(AbstractInitializableBeanDefinition.java:2165)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractInitializableBeanDefinition.java:1440)
	at io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:75)
	at io.micronaut.configuration.metrics.binder.executor.ExecutorServiceMetricsBinder.onCreated(ExecutorServiceMetricsBinder.java:48)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.inject.provider.BeanProviderDefinition$1.get(BeanProviderDefinition.java:81)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:86)
	at io.micronaut.http.server.netty.binders.NettyBinderRegistrar.onCreated(NettyBinderRegistrar.java:41)
	at io.micronaut.context.DefaultBeanContext.triggerBeanCreatedEventListener(DefaultBeanContext.java:2386)
	at io.micronaut.context.DefaultBeanContext.postBeanCreated(DefaultBeanContext.java:2364)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2288)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.$RouteExecutor$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.AbstractBeanResolutionContext.getBean(AbstractBeanResolutionContext.java:66)
	at io.micronaut.context.AbstractInitializableBeanDefinition.resolveBean(AbstractInitializableBeanDefinition.java:2069)
	at io.micronaut.context.AbstractInitializableBeanDefinition.getBeanForConstructorArgument(AbstractInitializableBeanDefinition.java:1299)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1596)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:1578)
	at io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2284)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2230)
	at io.micronaut.context.DefaultBeanContext.createRegistration(DefaultBeanContext.java:2995)
	at io.micronaut.context.SingletonScope.getOrCreate(SingletonScope.java:80)
	at io.micronaut.context.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:2897)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2858)
	at io.micronaut.context.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2779)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1659)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:1634)
	at io.micronaut.context.DefaultBeanContext.findBean(DefaultBeanContext.java:876)
	at io.micronaut.context.BeanLocator.findBean(BeanLocator.java:291)
	at io.micronaut.runtime.Micronaut.start(Micronaut.java:74)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:320)
	at io.micronaut.runtime.Micronaut.run(Micronaut.java:306)
	at io.hashimati.Application.main(Application.java:16)
Caused by: one.microstream.afs.exceptions.AfsException: null
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:407)
	at one.microstream.afs.sql.types.SqlConnector$Default.createDirectory(SqlConnector.java:749)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.specificCreate(SqlIoHandler.java:298)
	at one.microstream.afs.sql.types.SqlIoHandler$Default.create(SqlIoHandler.java:285)
	at one.microstream.afs.types.AIoHandler$Abstract.ensureExists(AIoHandler.java:735)
	at one.microstream.afs.types.ADirectory.ensureExists(ADirectory.java:70)
	at one.microstream.storage.types.StorageFileProvider$Abstract.defineTypeDictionaryFile(StorageFileProvider.java:355)
	at one.microstream.persistence.types.PersistenceTypeDictionaryIoHandler$Provider$Abstract.provideTypeDictionaryIoHandler(PersistenceTypeDictionaryIoHandler.java:80)
	at one.microstream.storage.embedded.types.EmbeddedStorage.ConnectionFoundation(EmbeddedStorage.java:100)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.ensureConnectionFoundation(EmbeddedStorageFoundation.java:465)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.getConnectionFoundation(EmbeddedStorageFoundation.java:503)
	at one.microstream.storage.embedded.types.EmbeddedStorageFoundation$Default.createEmbeddedStorageManager(EmbeddedStorageFoundation.java:773)
	at one.microstream.storage.embedded.types.EmbeddedStorage.createAndStartStorageManager(EmbeddedStorage.java:662)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:550)
	at one.microstream.storage.embedded.types.EmbeddedStorage.start(EmbeddedStorage.java:379)
	at io.hashimati.microstream.MicrostreamFactory.createStorageManager(MicrostreamFactory.java:72)
	at io.hashimati.microstream.$MicrostreamFactory$CreateStorageManager0$Definition.doBuild(Unknown Source)
	at io.micronaut.context.AbstractInitializableBeanDefinition.build(AbstractInitializableBeanDefinition.java:769)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:158)
	at io.micronaut.context.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2333)
	... 134 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=161) Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:366)
	at org.mariadb.jdbc.MariaDbStatement.executeUpdate(MariaDbStatement.java:630)
	at one.microstream.afs.sql.types.SqlConnector$Default.queryCreateDirectory(SqlConnector.java:270)
	at one.microstream.afs.sql.types.SqlConnector$Default.lambda$16(SqlConnector.java:751)
	at one.microstream.afs.sql.types.SqlProvider$Abstract.execute(SqlProvider.java:393)
	... 153 common frames omitted
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:262)
	at org.mariadb.jdbc.MariaDbStatement.executeInternal(MariaDbStatement.java:360)
	... 157 common frames omitted
Caused by: java.sql.SQLException: Table 'microstreamdd' already exists
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1695)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1557)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1520)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:256)
	... 158 common frames omitted
