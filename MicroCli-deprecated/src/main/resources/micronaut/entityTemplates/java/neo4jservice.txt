package ${servicePackage};

import jakarta.inject.Inject;
import jakarta.inject.Singleton;
import ${entityPackage};
import ${repoPackage};
<% print reactor? "import reactor.core.publisher.Flux;" : "import io.reactivex.Flowable;" %>
<% print reactor? "import reactor.core.publisher.Mono;" : "import io.reactivex.Single;" %>

import org.bson.BsonDocument;
import org.bson.BsonString;


@Singleton
public class ${className}Service {


    @Inject ${className}Repository ${entityName}Repository;

	public Single<${className}> save(${className} ${entityName}) {

        //TODO insert your logic here!
        //saving Object

        return ${entityName}Repository.save(${entityName});
    }

    public Single<${className}> findById(String id){
        return ${entityName}Repository.findById(id);
    }

     public Flowable<${className}> findAll(){
            return ${entityName}Repository.findAll();
     }

    public Single<Boolean> deleteById(String id) {
	    return ${entityName}Repository.deleteById(id);
	}
}